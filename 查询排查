--==========================
--分析语句占用
--==========================

SELECT creation_time  N'语句编译时间'
        ,last_execution_time  N'上次执行时间'
        ,total_physical_reads N'物理读取总次数'
        ,total_logical_reads/execution_count N'每次逻辑读次数'
        ,total_logical_reads  N'逻辑读取总次数'
        ,total_logical_writes N'逻辑写入总次数'
        ,execution_count  N'执行次数'
        ,total_worker_time/1000 N'所用的CPU总时间ms'
        ,total_elapsed_time/1000  N'总花费时间ms'
        ,(total_elapsed_time / execution_count)/1000  N'平均时间ms'
        ,SUBSTRING(st.text, (qs.statement_start_offset/2) + 1,
         ((CASE statement_end_offset
          WHEN -1 THEN DATALENGTH(st.text)
          ELSE qs.statement_end_offset END
            - qs.statement_start_offset)/2) + 1) N'执行语句'
FROM sys.dm_exec_query_stats AS qs
CROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) st
where SUBSTRING(st.text, (qs.statement_start_offset/2) + 1,
         ((CASE statement_end_offset
          WHEN -1 THEN DATALENGTH(st.text)
          ELSE qs.statement_end_offset END
            - qs.statement_start_offset)/2) + 1) not like '%fetch%' 
            and qs.execution_count>100 and
            (total_elapsed_time / execution_count)/1000>0
ORDER BY  total_elapsed_time / execution_count DESC

--==========================
--排查是否缺少索引
--==========================

SELECT  avg_total_user_cost * avg_user_impact * ( user_scans + user_seeks ) AS PossibleImprovement ,  
        last_user_seek ,  
        last_user_scan ,  
        [statement] AS [Object] ,  
        'CREATE INDEX [IDX_' + CONVERT(VARCHAR(32), GS.group_handle) + '_'  
        + CONVERT(VARCHAR(32), D.index_handle) + '_'  
        + REPLACE(REPLACE(REPLACE([STATEMENT], ']', ''), '[', ''), '.', '')  
        + ']' + ' ON ' + [statement] + ' (' + ISNULL(equality_columns, '')  
        + CASE WHEN equality_columns IS NOT NULL  
                    AND inequality_columns IS NOT NULL THEN ','  
               ELSE ''  
          END + ISNULL(inequality_columns, '') + ')' + ISNULL(' INCLUDE ('  
                                                              + included_columns  
                                                              + ')', '') AS Create_Index_Syntax  
FROM    sys.dm_db_missing_index_groups AS G  
        INNER JOIN sys.dm_db_missing_index_group_stats AS GS ON G.index_group_handle = GS.group_handle  
        INNER JOIN sys.dm_db_missing_index_details AS D ON G.index_handle = D.index_handle  
ORDER BY PossibleImprovement DESC  

--==========================
--排查锁死
--==========================
select  * from sys.sysprocesses  cross apply  sys.dm_exec_sql_text(sql_handle) where blocked>0
